
class User {
	public i32 id;
	public String firstname;
	public ?String lastname;
	public ?Value<i32> nr;

	public static func import_mysql_all(Array<Map<?String>> users) !Array<User> {
		@ result = Array<User>.make(2);
		each users as user {
			result.push(User.import_mysql(user) or pass);
		}
		return result;
	}

	public static func import_mysql(Map<?String> data) !User {

		@ id = data.get("id") or throw missing_field;
		ifnull id throw id_is_null;

		@ fn = data.get("firstname") or throw missing_field;
		ifnull fn throw firstname_is_null;

		@ nr = data.get("nr") or throw missing_field;
		?Value<i32> nrv = null;
		notnull nr do {
			@ i = nr.i32() or value 0;
			nrv = ?i;
		}

		return User {
			id: id.i32() or pass,
			firstname: fn,
			lastname: data.get("lastname") or throw missing_field,
			nr: nrv,
		};
	}
}

func _test_query() i32 {

	@ client = main:init("127.0.0.1", "root", "root", "ki", 3306);

	@ db = client.connect() or return {
		println("Failed to connect");
		return 1;
	};

	@ users = db.all("SELECT * FROM users") or return 1;

	println("Results:");

	@ models = User.import_mysql_all(users) or return 1;
	each models as u {
		print("fn: ");
		println(u.firstname);

		print("ln: ");
		println(u.lastname or "null");
	}

	println("---------------");

	return 0;
}
